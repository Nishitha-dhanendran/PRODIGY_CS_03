import re

def password_strength(password):
    length = len(password)
    has_upper = bool(re.search(r'[A-Z]', password))
    has_lower = bool(re.search(r'[a-z]', password))
    has_digit = bool(re.search(r'\d', password))
    has_special = bool(re.search(r'[!@#$%^&*(),.?":{}|<>]', password))

    score = 0
    feedback = []

    if length >= 8:
        score += 1
    else:
        feedback.append("Password should be at least 8 characters long.")
    
    if has_upper:
        score += 1
    else:
        feedback.append("Password should include at least one uppercase letter.")
    
    if has_lower:
        score += 1
    else:
        feedback.append("Password should include at least one lowercase letter.")
    
    if has_digit:
        score += 1
    else:
        feedback.append("Password should include at least one digit.")
    
    if has_special:
        score += 1
    else:
        feedback.append("Password should include at least one special character.")

    if score == 5:
        feedback.append("Your password is strong.")
    elif 3 <= score < 5:
        feedback.append("Your password is moderate.")
    else:
        feedback.append("Your password is weak.")

    return score, feedback

def main():
    print("Password Strength Checker")
    password = input("Enter your password: ")
    score, feedback = password_strength(password)

    print(f"\nPassword strength score: {score}/5")
    for comment in feedback:
        print(comment)

if __name__ == "__main__":
    main()
